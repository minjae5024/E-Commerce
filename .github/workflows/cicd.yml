name: E-Commerce CI/CD to AWS (JAR Deployment)

on:
  push:
    branches:
      - main

env:
  APP_NAME: ecommerce-portfolio
  JAR_PATH: build/libs/ECommerce-0.0.1-SNAPSHOT.jar

jobs:
  build:
    name: Build with Gradle
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-jar
          path: ${{ env.JAR_PATH }}

  deploy:
    name: Deploy to AWS EC2 Instance
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-jar

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "ECommerce-0.0.1-SNAPSHOT.jar"
          target: "/home/${{ secrets.SSH_USER }}/app"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Find and kill the old process
            PID=$(pgrep -f ${{ env.APP_NAME }})
            if [ -n "$PID" ]; then
              echo "Stopping process with PID: $PID"
              kill -15 $PID
              sleep 5
            fi

            # Start the new application in the background
            nohup java -jar /home/${{ secrets.SSH_USER }}/app/ECommerce-0.0.1-SNAPSHOT.jar \
              --spring.profiles.active=prod \
              --spring.datasource.url=jdbc:mysql://${{ secrets.DB_HOST }}:3306/${{ secrets.DB_NAME }}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC \
              --spring.datasource.username=${{ secrets.DB_USERNAME }} \
              --spring.datasource.password=${{ secrets.DB_PASSWORD }} \
              --jwt.secret=${{ secrets.JWT_SECRET }} \
              --spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect > /dev/null 2>&1 &
